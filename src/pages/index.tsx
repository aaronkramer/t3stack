import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { trpc } from "../utils/trpc";
import { v4 as uuidv4 } from 'uuid';


const ItemList: React.FC<{ id: number, itemData: { text: string } }> = ({ id, itemData }) => {
  return (
    <li className="m-2">
      <div className="flex flex-row">
        <p className="flex-1">{itemData.text}</p>
        <p className="justify-end rounded bg-green-200 hover:bg-green-300 w-50px">Edit</p>
        <input type='button' className="ml-2 justify-end rounded bg-red-200 hover:bg-red-300 w-50px" value='Delete'
          onClick={() => {

          }

          }
        />
      </div>
    </li>
  );
};

const todoMap = new Map<number, { text: string }>([
  [1, { text: "Item 1" }],
  [2, { text: "Item 2" }]
])

const itemsArr = ["Item 1", "Item 2"]

const Home: NextPage = () => {
  const [items, setItems] = useState(todoMap)
  const [taskText, setTaskText] = useState('')
  useEffect(() => {
    console.log(`Updates ${items}`)
    setItems(items)
  }, [items])
  const pressedKeys: string[] = []
  const renderLists = () => {
    return (

      [...items].map((item) => {
        const itemData = item[1]
      const id = item[0]
      return (
        <li className="m-2">
          <div className="flex flex-row content-between">
            <p className="flex-1">{itemData.text}</p>
            <p className="px-2 py-0.5 justify-end rounded bg-green-200 hover:bg-green-300 w-50px">Edit</p>
            <input type='button' className="px-2 py-0.5 ml-2 justify-end rounded bg-red-200 hover:bg-red-300 w-50px" value='Delete'
              onClick={() => {
                console.log(`delete ${id}`)
                items.delete(id)
                console.log(items)
                setItems(items)
              }
            }
            />
          </div>
        </li>
      )
    })
    )
  }

  // const hello = trpc.useQuery(["example.hello"]);
  // items.push('Item 3')

  return (
    <>
      <Head>
        <title>Aaron's Checklist</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-[700px] flex flex-col items-center justify-center w-700 mx-auto ">
        <h1>
          Todo List
        </h1>
        <div className="flex flex-row">
          <textarea className="h-auto w-[250px] border border-black focus:bg-blue-100"
            value={taskText}
            rows={1}
            onChange={
              (event) => {
                setTaskText(event.target.value)
              }
            }
            onKeyDown={
              (event) => {
                if (!pressedKeys.includes(event.key)) { pressedKeys.push(event.key) }
                if (pressedKeys.includes('Enter') && pressedKeys.includes('Shift')) { }
                else if (pressedKeys.includes('Enter')) {
                  todoMap.set(uuidv4(), { text: taskText })
                  setItems(todoMap)
                  setTaskText('')
                  if (!pressedKeys.includes('Control')) {
                    event.currentTarget.blur()
                    pressedKeys.length = 0
                  }
                } else if (pressedKeys.includes('Escape')) {
                  setTaskText('')
                  event.currentTarget.blur()
                  pressedKeys.length = 0
                }
              }
            }
            onKeyUp={
              (event) => {
                const index = pressedKeys.indexOf(event.key)
                if (index != -1) { pressedKeys.splice(index) }
              }
            }
          />
          <input className="ml-2 px-2 py-1 border border-black bg-blue-200 hover:bg-blue-500" type="button" value="Input Text" onClick={
            () => {
              if (taskText) {
                items.set(uuidv4(), { text: taskText })
                setItems(items)
                setTaskText('')
              }
            }
          } />
        </div>
        <div className="pl-4 w-[100%]">
          This section is for the todolist
          <ul className="list-disc w-[100%]">
            {renderLists()}
            {/* {[...items].map((item) => {
              const itemData = item[1]
              const id = item[0]
              return (
                <li className="m-2">
                  <div className="flex flex-row content-between">
                    <p className="flex-1">{itemData.text}</p>
                    <p className="px-2 py-0.5 justify-end rounded bg-green-200 hover:bg-green-300 w-50px">Edit</p>
                    <input type='button' className="px-2 py-0.5 ml-2 justify-end rounded bg-red-200 hover:bg-red-300 w-50px" value='Delete'
                      onClick={() => {
                        console.log(`delete ${id}`)
                        items.delete(id)
                        console.log(items)
                        setItems(items)
                      }
                      }
                    />
                  </div>
                </li>
              )
            })} */}
          </ul>
        </div>
      </div>
    </>
  );
};

export default Home;
