import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";
import { v4 as uuidv4 } from 'uuid';


const ItemList: React.FC<{ id: number, itemData: {text: string} }> = ({ id, itemData }) => {
  return (
    <li className="m-2">
      <div className="flex flex-row">
        <p className="flex-1">{itemData.text}</p>
        <p className="justify-end rounded bg-green-200 hover:bg-green-300 w-50px">Edit</p>
        <input type='button' className="ml-2 justify-end rounded bg-red-200 hover:bg-red-300 w-50px" value='Delete'
        onClick={() => {
          
        }

        }
        />
      </div>
    </li>
  );
};

const todoMap = new Map<number, { text: string }>([
  [1, { text: "Item 1" }],
  [2, { text: "Item 2" }]
])

const itemsArr = ["Item 1", "Item 2"]

const Home: NextPage = () => {
  const [items, setItems] = useState(todoMap)
  const [taskText, setTaskText] = useState('')

  // const hello = trpc.useQuery(["example.hello"]);
  // items.push('Item 3')

  return (
    <>
      <Head>
        <title>Aaron's Checklist</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-[700px] flex flex-col items-center justify-center w-700 mx-auto ">
        <h1>
          Todo List
        </h1>
        <div>
          <input className="border border-black focus:bg-blue-100"
            value={taskText}
            onChange={
              (event) => {
                setTaskText(event.target.value)
              }
            }
            onKeyDown={
              (event) => {
                if (event.key === 'Enter') {
                  todoMap.set(uuidv4(), {text: taskText})
                  setItems(todoMap)
                  console.log(todoMap)
                  setTaskText('')

                } else if (event.key === 'Escape') {
                  setTaskText('')
                  event.currentTarget.blur()
                }
              }
            }
          />
          <input className="ml-2 px-2 py-1 border border-black bg-blue-200 hover:bg-blue-500" type="button" value="Input Text" onClick={
            () => {
              todoMap.set(uuidv4(), {text: taskText})
              setItems(todoMap)
              setTaskText('')
            }
          } />
        </div>
        <div className="w-max">
          This section is for the todolist
          <ul className="list-disc">
            {[...items].map((item) => {
              return (
                <ItemList id={item[0]} itemData={item[1]}></ItemList>
              )
            })}
          </ul>
        </div>
      </div>
    </>
  );
};

export default Home;
